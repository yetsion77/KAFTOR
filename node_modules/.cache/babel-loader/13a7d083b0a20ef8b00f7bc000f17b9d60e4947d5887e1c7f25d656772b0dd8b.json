{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{db}from'../firebase';import{collection,addDoc,getDocs,doc,deleteDoc,query}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";export const GameContext=/*#__PURE__*/createContext();export const GameProvider=_ref=>{let{children}=_ref;const[boards,setBoards]=useState([]);const[currentBoard,setCurrentBoard]=useState(null);const[visibleBoard,setVisibleBoard]=useState([]);const[hiddenBoard,setHiddenBoard]=useState([]);const[connectingWords,setConnectingWords]=useState([]);const[selectedCell,setSelectedCell]=useState(null);const[guessedCells,setGuessedCells]=useState([]);const[isGameOver,setIsGameOver]=useState(false);const[hints,setHints]=useState({targetWordHints:Array(9).fill(false),connectingWordHints:Array(9).fill(false)});// טעינת לוחות מ-Firebase במקום מ-localStorage\nuseEffect(()=>{const fetchBoards=async()=>{const boardsCollection=collection(db,\"boards\");const boardsSnapshot=await getDocs(boardsCollection);const boardsList=boardsSnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setBoards(boardsList);};fetchBoards();},[]);// שמירת לוחות בכל פעם שהם משתנים\nuseEffect(()=>{if(boards.length>0){localStorage.setItem('kaftor-veferach-boards',JSON.stringify(boards));}},[boards]);// יצירת לוח חדש ב-Firebase\nconst createBoard=async boardData=>{const newBoard={name:boardData.name,phrases:boardData.phrases,createdAt:new Date().toISOString()};const docRef=await addDoc(collection(db,\"boards\"),newBoard);const boardWithId={...newBoard,id:docRef.id};setBoards([...boards,boardWithId]);return docRef.id;};// טעינת לוח למשחק\nconst loadBoard=boardId=>{const board=boards.find(b=>b.id===boardId);if(!board)return false;setCurrentBoard(board);// עיבוד הצירופים ליצירת הלוחות\nconst{visibleCells,hiddenCells,connecting}=processBoard(board.phrases);setVisibleBoard(visibleCells);setHiddenBoard(hiddenCells);setConnectingWords(connecting);setGuessedCells([]);setIsGameOver(false);setHints({targetWordHints:Array(9).fill(false),connectingWordHints:Array(9).fill(false)});return true;};// עיבוד הצירופים ליצירת הלוחות\nconst processBoard=phrases=>{const visibleCells=[];const hiddenCells=[];const connecting=[];phrases.forEach((phrase,index)=>{const words=phrase.split(' ');if(words.length>=3){// בחירה אקראית אם להציג את המילה הראשונה או השלישית\nconst showFirst=Math.random()>0.5;if(showFirst){visibleCells.push(words[0]);hiddenCells.push(words[2]);}else{visibleCells.push(words[2]);hiddenCells.push(words[0]);}connecting.push(words[1]);}});return{visibleCells,hiddenCells,connecting};};// בדיקת ניחוש\nconst checkGuess=(cellIndex,guess)=>{if(hiddenBoard[cellIndex].trim().toLowerCase()===guess.trim().toLowerCase()){setGuessedCells([...guessedCells,cellIndex]);// בדיקה אם המשחק הסתיים\nif(guessedCells.length+1===hiddenBoard.length){setIsGameOver(true);}return true;}return false;};// חשיפת רמז - האות הראשונה של המילה המבוקשת\nconst revealTargetHint=cellIndex=>{const newHints={...hints};newHints.targetWordHints[cellIndex]=true;setHints(newHints);return hiddenBoard[cellIndex].charAt(0);};// חשיפת רמז - האות הראשונה של המילה המקשרת\nconst revealConnectingHint=cellIndex=>{const newHints={...hints};newHints.connectingWordHints[cellIndex]=true;setHints(newHints);return connectingWords[cellIndex].charAt(0);};// מחיקת לוח מ-Firebase\nconst deleteBoard=async boardId=>{await deleteDoc(doc(db,\"boards\",boardId));setBoards(boards.filter(board=>board.id!==boardId));};return/*#__PURE__*/_jsx(GameContext.Provider,{value:{boards,currentBoard,visibleBoard,hiddenBoard,connectingWords,selectedCell,guessedCells,isGameOver,hints,setSelectedCell,createBoard,loadBoard,checkGuess,revealTargetHint,revealConnectingHint,deleteBoard},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","db","collection","addDoc","getDocs","doc","deleteDoc","query","jsx","_jsx","GameContext","GameProvider","_ref","children","boards","setBoards","currentBoard","setCurrentBoard","visibleBoard","setVisibleBoard","hiddenBoard","setHiddenBoard","connectingWords","setConnectingWords","selectedCell","setSelectedCell","guessedCells","setGuessedCells","isGameOver","setIsGameOver","hints","setHints","targetWordHints","Array","fill","connectingWordHints","fetchBoards","boardsCollection","boardsSnapshot","boardsList","docs","map","id","data","length","localStorage","setItem","JSON","stringify","createBoard","boardData","newBoard","name","phrases","createdAt","Date","toISOString","docRef","boardWithId","loadBoard","boardId","board","find","b","visibleCells","hiddenCells","connecting","processBoard","forEach","phrase","index","words","split","showFirst","Math","random","push","checkGuess","cellIndex","guess","trim","toLowerCase","revealTargetHint","newHints","charAt","revealConnectingHint","deleteBoard","filter","Provider","value"],"sources":["C:/Users/User/KAFTOR/src/context/GameContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, addDoc, getDocs, doc, deleteDoc, query } from \"firebase/firestore\";\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [boards, setBoards] = useState([]);\r\n  const [currentBoard, setCurrentBoard] = useState(null);\r\n  const [visibleBoard, setVisibleBoard] = useState([]);\r\n  const [hiddenBoard, setHiddenBoard] = useState([]);\r\n  const [connectingWords, setConnectingWords] = useState([]);\r\n  const [selectedCell, setSelectedCell] = useState(null);\r\n  const [guessedCells, setGuessedCells] = useState([]);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [hints, setHints] = useState({\r\n    targetWordHints: Array(9).fill(false),\r\n    connectingWordHints: Array(9).fill(false)\r\n  });\r\n\r\n  // טעינת לוחות מ-Firebase במקום מ-localStorage\r\n  useEffect(() => {\r\n    const fetchBoards = async () => {\r\n      const boardsCollection = collection(db, \"boards\");\r\n      const boardsSnapshot = await getDocs(boardsCollection);\r\n      const boardsList = boardsSnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setBoards(boardsList);\r\n    };\r\n    \r\n    fetchBoards();\r\n  }, []);\r\n\r\n  // שמירת לוחות בכל פעם שהם משתנים\r\n  useEffect(() => {\r\n    if (boards.length > 0) {\r\n      localStorage.setItem('kaftor-veferach-boards', JSON.stringify(boards));\r\n    }\r\n  }, [boards]);\r\n\r\n  // יצירת לוח חדש ב-Firebase\r\n  const createBoard = async (boardData) => {\r\n    const newBoard = {\r\n      name: boardData.name,\r\n      phrases: boardData.phrases,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    const docRef = await addDoc(collection(db, \"boards\"), newBoard);\r\n    const boardWithId = { ...newBoard, id: docRef.id };\r\n    \r\n    setBoards([...boards, boardWithId]);\r\n    return docRef.id;\r\n  };\r\n\r\n  // טעינת לוח למשחק\r\n  const loadBoard = (boardId) => {\r\n    const board = boards.find(b => b.id === boardId);\r\n    if (!board) return false;\r\n    \r\n    setCurrentBoard(board);\r\n    \r\n    // עיבוד הצירופים ליצירת הלוחות\r\n    const { visibleCells, hiddenCells, connecting } = processBoard(board.phrases);\r\n    \r\n    setVisibleBoard(visibleCells);\r\n    setHiddenBoard(hiddenCells);\r\n    setConnectingWords(connecting);\r\n    setGuessedCells([]);\r\n    setIsGameOver(false);\r\n    setHints({\r\n      targetWordHints: Array(9).fill(false),\r\n      connectingWordHints: Array(9).fill(false)\r\n    });\r\n    \r\n    return true;\r\n  };\r\n\r\n  // עיבוד הצירופים ליצירת הלוחות\r\n  const processBoard = (phrases) => {\r\n    const visibleCells = [];\r\n    const hiddenCells = [];\r\n    const connecting = [];\r\n    \r\n    phrases.forEach((phrase, index) => {\r\n      const words = phrase.split(' ');\r\n      if (words.length >= 3) {\r\n        // בחירה אקראית אם להציג את המילה הראשונה או השלישית\r\n        const showFirst = Math.random() > 0.5;\r\n        \r\n        if (showFirst) {\r\n          visibleCells.push(words[0]);\r\n          hiddenCells.push(words[2]);\r\n        } else {\r\n          visibleCells.push(words[2]);\r\n          hiddenCells.push(words[0]);\r\n        }\r\n        \r\n        connecting.push(words[1]);\r\n      }\r\n    });\r\n    \r\n    return { visibleCells, hiddenCells, connecting };\r\n  };\r\n\r\n  // בדיקת ניחוש\r\n  const checkGuess = (cellIndex, guess) => {\r\n    if (hiddenBoard[cellIndex].trim().toLowerCase() === guess.trim().toLowerCase()) {\r\n      setGuessedCells([...guessedCells, cellIndex]);\r\n      \r\n      // בדיקה אם המשחק הסתיים\r\n      if (guessedCells.length + 1 === hiddenBoard.length) {\r\n        setIsGameOver(true);\r\n      }\r\n      \r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // חשיפת רמז - האות הראשונה של המילה המבוקשת\r\n  const revealTargetHint = (cellIndex) => {\r\n    const newHints = { ...hints };\r\n    newHints.targetWordHints[cellIndex] = true;\r\n    setHints(newHints);\r\n    return hiddenBoard[cellIndex].charAt(0);\r\n  };\r\n\r\n  // חשיפת רמז - האות הראשונה של המילה המקשרת\r\n  const revealConnectingHint = (cellIndex) => {\r\n    const newHints = { ...hints };\r\n    newHints.connectingWordHints[cellIndex] = true;\r\n    setHints(newHints);\r\n    return connectingWords[cellIndex].charAt(0);\r\n  };\r\n\r\n  // מחיקת לוח מ-Firebase\r\n  const deleteBoard = async (boardId) => {\r\n    await deleteDoc(doc(db, \"boards\", boardId));\r\n    setBoards(boards.filter(board => board.id !== boardId));\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        boards,\r\n        currentBoard,\r\n        visibleBoard,\r\n        hiddenBoard,\r\n        connectingWords,\r\n        selectedCell,\r\n        guessedCells,\r\n        isGameOver,\r\n        hints,\r\n        setSelectedCell,\r\n        createBoard,\r\n        loadBoard,\r\n        checkGuess,\r\n        revealTargetHint,\r\n        revealConnectingHint,\r\n        deleteBoard\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}